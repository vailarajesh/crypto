#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Define the substitution key (26 unique letters)
char key[26] = {
    'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P',
    'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'Z',
    'X', 'C', 'V', 'B', 'N', 'M'
};

// Encrypt function
void encrypt(char *plaintext, char *ciphertext) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char ch = toupper(plaintext[i]);
            ciphertext[i] = key[ch - 'A'];
        } else {
            ciphertext[i] = plaintext[i]; // keep spaces/punctuation unchanged
        }
    }
}

// Decrypt function
void decrypt(char *ciphertext, char *decryptedtext) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char ch = toupper(ciphertext[i]);
            for (int j = 0; j < 26; j++) {
                if (key[j] == ch) {
                    decryptedtext[i] = 'A' + j;
                    break;
                }
            }
        } else {
            decryptedtext[i] = ciphertext[i];
        }
    }
}

int main() {
    char plaintext[100], ciphertext[100] = {0}, decryptedtext[100] = {0};

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    encrypt(plaintext, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    decrypt(ciphertext, decryptedtext);
    printf("Decrypted text: %s\n", decryptedtext);

    return 0;
}



OUTPUT : C:\Users\RAJESH\OneDrive\Pictures\Screenshots\Screenshot 2025-06-18 220936.png


